@startuml
'skinparam dpi 250'
skinparam classBackgroundColor #F8F8F8
skinparam classBorderColor #0066CC
skinparam classArrowColor #0066CC

class PetrolStationObjectController {
	- <u> instance : PetrolStationObjectController
	+ PetrolStationObjectController()
	+ GetInstance() : PetrolStationObjectController
	+ GetInstanceIds<type>() : List<int>
	+ GetObjectInstance<type>(pid : int) : T
	+ AddInstance(ppetrolStationObject : PetrolStationObject)
}
PetrolStationObjectController "1" -- "*" PetrolStationObject

class DataContainer {
	- path : string
	+ DataContainer()
	+ Load<type>() : List<type>
	+ GetEarningsSinceDate(pfueltype : Fueltype, pminDate:DateTime) : Tuple<int, int>
}

class DataItem {
	- savepath : string
	- guid : string
	+ DataItem()
	+ Save()
	+ GetSavePath() : string
}

class Fueltank {
	- maxlevel : int
	- fuelLevel : int
	- lowCriticalVolumePercent : decimal
	- isCritical : bool
	+ FuelTank(ptankVolume : int, plowCriticalVolumePercent : decimal, pfuelType : Fueltype)
	+ DecreaseFuelLevel(pamount : int)
	+ FillUp()
	+ CheckIfCritical()
	+ GetPricePerLiter() : int
        + GetFuelType() : Fueltype
	+ GetFuelTypeName() : string
	+ GetIsCritical() : bool
}
Fueltank "1"--o "1" Fueltype
Fueltank --|> PetrolStationObject

class Fueltype {
	- name : string
	- pricePerLiter : int
	+ Fueltype(pname : string, ppricePerLiter : int)
	+ GetPricePerLiter() : int
	+ GetName() : string
}

class PayStation {
	- amountToPay : int
	- currentSelectedPumpId : int
	- returnMoney : int
- fuelCost : int
	+ PayStation()
	+ SetAmountToPay(ppumpId : int)
- SetFuelCosts()
	+ GetAmountToPay()
	+ PayMoney(pworth : int)
	+ CreateQuittance()
	+ ReturnBackMoney()
}
PayStation "1" --* "0...*" MoneyContainer
PayStation --|> PetrolStationObject

class MoneyContainer {
	- lowCriticalPercent : double
	- maxCriticalPercent : double
	- maxCount : int
	- count : int
	- worth : int
	+ MoneyContainer(pworth : int, pmaxCount : int, plowCriticalPercent : double, pmaxCriticalPercent : double, pcount=0: int)
	+ GetWorth() : int
	+ IncreaseCount()
	+ DecreaseCount()
	+ CheckCriticalPercent() 
}

class PetrolPump {
	- tankSpeed : int
	- amountToPay : int
	- alreadyFuelledVolume : int
	- selectedTap : Tap
	+ PetrolPump()
	+ AddTap(ptap : Tap)
	+ AddTap(pfuelTank : FuelTank)
	+ GetListOfTapsId() : Dictionary<int, string>
	+ PrepareFuelling(ptapId : int)
	+ Fuelling() : int
	+ GetAmountToPay() : int
        + GetSelectedTap() : Tap
        + GetAlreadyFuelledVolume() : int
	+ UnlockTap()
	+ ResetAmountToPay()
	+ SetVolumeToNull()
}
PetrolPump "1" --* "0...*" Tap
PetrolPump --|> PetrolStationObject

class PetrolStationObject  {
	- id : int
	+ PetrolStationObject()
	+ GetId() : int
	+ SetId(pid : int)
}
PetrolStationObject --|> DataItem

class Quittance {
	- createdAt : DateTime
	- amountToPay : int
	- millilitersTanked : int
	+ Quittance(pamountToPay : int, pmillilitersTanked : int, pfuelType : Fueltype)
	+ GetCreatedAt() : DateTime
	+ GetAmountToPay() : int
	+ GetMililitersTanked() : int
	+ GetFuelType() : Fueltype
}
Quittance "1" --o "1" Fueltype
Quittance --|> DataItem

class Tap {
	- id : id
	- locked : bool
	+ Tap(pfueltank : FuelTank, pid : int)
	+ Lock()
	+ Unlock()
	+ IsLocked() : bool
	+ DecreaseFuelLevelOfTank(pamount : int)
	+ GetPricePerLiter() : int
	+ GetFuelTypeName() : string
        + GetFueltype() : Fueltype
	+ GetId() : int
}
Tap "1" --o "1" Fueltank

@enduml 
